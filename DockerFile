FROM nvidia/cuda:11.4.3-cudnn8-devel-ubuntu18.04

ENV LANG=C.UTF-8

RUN apt-get update -y && apt-get install -y \
    git \
    wget \
    curl \
    cmake \
    unzip \
    software-properties-common \
    unixodbc-dev \
    gcc \
    g++
ENV DEBIAN_FRONTEND=noninteractive
# RUN : \
#     && apt-get update \
#     && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#         software-properties-common \
#     && add-apt-repository -y ppa:deadsnakes \
#     && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#         python3.8-venv \
#         python3-venv \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/* \
#     && :
# RUN apt update
# RUN apt install software-properties-common
# RUN add-apt-repository ppa:deadsnakes/ppa
# RUN apt update
# RUN apt install python3.9
# RUN python3.9 --version

RUN apt install -y --no-install-recommends wget build-essential checkinstall
RUN apt install -y --no-install-recommends libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev
RUN cd /opt
RUN wget https://www.python.org/ftp/python/3.9.16/Python-3.9.16.tgz
RUN tar xzf Python-3.9.16.tgz
RUN cd Python-3.9.16
RUN ./configure --enable-optimizations
RUN make altinstall

RUN python3.9 -m venv /venv
ENV PATH=/venv/bin:$PATH

RUN python --version
RUN pip3 install --upgrade pip
RUN pip3 install torch torchvision torchaudio

COPY legal-prompt /home/legal-prompt
WORKDIR /home/legal-prompt/
RUN cd /home/legal-prompt/
RUN pip install -r requirements.txt

ENTRYPOINT ["python","-m", "experiments.falcon"]
